// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Todo {
  id        Int      @id @default(autoincrement())
  text      String
  completed Boolean  @default(false)
  createdAt DateTime @default(now())
}

model Usuario {
  id_usuario   Int      @id @default(autoincrement())
  nome         String   @db.VarChar(100)
  email        String   @unique @db.VarChar(150)
  senha        String   @db.VarChar(255)
  data_criacao DateTime
  idade        Int      @default(0)

  Carrinhos    Carrinho[]
  Pedidos      Pedido[]
}

model Carrinho {
  id_carrinho  Int      @id @default(autoincrement())
  id_usuario   Int
  data_criacao DateTime

  usuario      Usuario  @relation(fields: [id_usuario], references: [id_usuario])
  Itens        ItemCarrinho[]

  @@index([id_usuario])
}

model ItemCarrinho {
  id_item     Int       @id @default(autoincrement())
  id_carrinho Int
  id_produto  Int
  quantidade  Int

  carrinho    Carrinho  @relation(fields: [id_carrinho], references: [id_carrinho])
  produto     Produto   @relation(fields: [id_produto], references: [id_produto])

  @@index([id_carrinho])
  @@index([id_produto])
}

model Produto {
  id_produto  Int       @id @default(autoincrement())
  nome        String    @db.VarChar(255)
  descricao   String    @db.Text
  preco       Decimal   @db.Decimal(10, 2)
  estoque     Int
  categoria   String    @db.VarChar(50)
  imagem      Bytes?
  createdAt   DateTime  
  updatedAt   DateTime  

  Itens       ItemCarrinho[]
  ItensPedido ItemPedido[]
}

model Pedido {
  id_pedido   Int           @id @default(autoincrement())
  id_usuario  Int
  data_pedido DateTime?
  status      String        @db.VarChar(20)
  total       Decimal       @db.Decimal(10, 2)

  usuario     Usuario       @relation(fields: [id_usuario], references: [id_usuario])
  Itens       ItemPedido[]
  Pagamentos  Pagamento[]

  @@index([id_usuario])
}

model ItemPedido {
  id_item_pedido Int      @id @default(autoincrement())
  id_pedido      Int
  id_produto     Int
  quantidade     Int
  preco_unitario Decimal @db.Decimal(10, 2)

  pedido         Pedido   @relation(fields: [id_pedido], references: [id_pedido])
  produto        Produto  @relation(fields: [id_produto], references: [id_produto])

  @@index([id_pedido])
  @@index([id_produto])
}

model Pagamento {
  id_pagamento     Int      @id @default(autoincrement())
  id_pedido        Int
  valor            Decimal  @db.Decimal(10, 2)
  data_pagamento   DateTime 
  metodo_pagamento String   @db.VarChar(50)
  status_pagamento String   @db.VarChar(20)

  pedido           Pedido   @relation(fields: [id_pedido], references: [id_pedido])

  @@index([id_pedido])
}
